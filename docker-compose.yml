services:
  database:
    build:
      dockerfile: database.Dockerfile
    container_name: database
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
      - ./database:/var/lib/mysql
    networks:
      - my-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
  redis:
    build:
      dockerfile: redis.Dockerfile
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - my-net
  server:
    build:
      context: .
      dockerfile: server.Dockerfile
      args:
        NODE_ENV: development # Default to dev; override for prod;$ docker compose build --build-arg NODE_ENV=production;$ docker compose up -d
    container_name: server
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "5000:5000"
    volumes:
      - .:/slightly_techie # Sync for hot-reload (dev only)
      - /slightly_techie/node_modules # Isolate container's node_modules
    env_file:
      - .env   
    networks:
      - my-net
    restart: unless-stopped # Auto-recover on crashes

networks:
  my-net:
    driver: bridge
